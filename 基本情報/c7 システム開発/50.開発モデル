## 開発手法(基礎)
・開発の順序だて、予定

〇ウォーターフォールモデル
1.要件定義
2.システム設計
3.プログラミング
4.テスト
5.お披露目
・お披露目が最後になるため、食い違いがあると大変
・管理が楽

〇プロトタイピングモデル
1.要件定義
2.プロトタイプ作成・お披露目
3.システム設計
4.プログラミング
5.テスト
6.お披露目
・プロトタイプを一度作ることで、食い違いを防ぐ
・大規模な開発だと、プロトタイプに時間をとられすぎるので不可能

〇スパイラルモデル
1.要件定義
2.ループ
 2-1.設計
 2-2.プログラミング
 2-3.テスト
 2-4.お披露目
3.お披露目
・システムをサブシステムに分割して、一つ一つ完成させていく
・サブシステムが完成するごとにお披露目することで、食い違いを防ぐ
・お披露目後の意見を次のサブシステムに活かせる


## 開発手法(応用)
〇RAD(Rapid Application Development)
・プロトタイプを何度も作り、完成度を上げる手法
・CASEやビジュアルプログラミング言語を用いて迅速にプロトタイプを仕上げる
・タイムボックスを設けて、その期間を過ぎると強制的に次の作業に移る

〇アジャイル
・スパイラルモデルをより短い反復単位で行うもの
・反復を終えるたびにリリースする

〇XP(eXtreme Programming)
・アジャイルの一種
・仕様を固めずにスタートする
・5つの価値と19のプラクティスに基づいて開発する

〇フォワードエンジニアリング
・リバースエンジニアリングを利用してソフトウェアを作る事
リバースエンジニアリング：既存のプログラムを解析して、コードを割り出し、そこから新しいプログラムを作る事
・無断でやると著作権に引っかかるかも

〇マッシュアップ
・既存のサービスを組み合わせて、新しいサービスを作り上げること
