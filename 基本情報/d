
[^1]: **必須項目：** １項目でも出来ていないのがあったら、再提出。

[^2]: **チャレンジ項目：** 条件を満たしていなくても再提出は不要で、条件を満たしていたらフィードバックで褒める。

[^3]: **rspec項目：** Bookers課題をレビューするときは、必ずrspecを実行して全て通っているか確認してください。rspec項目を満たしていない場合は、必須項目, チャレンジ項目のレビューはせずに返却します。

[^4]: rspecでエラーが出た時のみ検証

[^5]: refileを使用するのに必要なライブラリ。vagrantfileに記述されていて、本来は`vagrant up`の時点でインストールされるが、まれに抜けてしまうことがある。レビューの際は基本的にvagrant上でした方が良い。



## レビューの書き方
チェックポイントの欄を順番に確認してください。
- Rspecが通らない場合 ==**不合格**==
  - [共通テンプレート（不合格）](###共通テンプレート-:-不合格だった場合)を記入した後、Rspec項目のフィードバックをする
- 必須項目の条件を全て満たしていない場合 ==**不合格**==
  - [共通テンプレート（不合格）](###共通テンプレート-:-不合格だった場合)を記入した後、必須項目のフィードバックをする
  - HTMLの課題では、レスポンシブ前、レスポンシブ後でチェックポイントを分けてください
- 必須項目の条件を全て満たしていた場合 ==**合格**==
  - [共通テンプレート（合格）](###共通テンプレート-:-合格だった場合)を記入した後、チャレンジ項目のフィードバックをする
- 資料下部に[レビューのサンプル](##課題のレビューサンプル)があります

</br
</br

## チェックポイント（指摘箇所）

### HTML

#### 1. 必須項目[^1]

==**共通**==
* 画像が表示されているか( [テンプレート](####画像が表示されているか。) )


==**レスポンシブ前**==
* 横並びになっているか（HTML9章）( [テンプレート](####横並びになっているか（HTML９章）) )
* 見本通りの余白設定になっているか（HTML9章）( [テンプレート](####見本通りの余白設定になっているか（HTML９章）) )


==**レスポンシブ後**==

* viewportの設定をしているか( [テンプレート](####viewportの設定をしているか) )
* メディアクエリの設定が「max-width: 768px」になっているか( [テンプレート](####メディアクエリの設定が「max-width:-768px」になっているか) )
* step-boxの横幅が、常に画面幅の90%になっているか( [テンプレート](####step-boxの横幅が、常に画面幅の90%になっているか) )
* 見本通りの余白設定になっているか（HTML10章）( [テンプレート](####見本通りの余白設定になっているか（HTML１０章）) )


==**オフライン講座限定**==
* ヘッダー、フッターが作成されているか( [テンプレート](####ヘッダー、フッターが作成されているか) )

</br

#### 2. チャレンジ項目[^2]

==**共通**==
* 要素が中央寄せされているか( [テンプレート](####要素が中央寄せされているか) )
* インデントが整っているか( [テンプレート](####インデントが整っているか) )
* （background-image使用時のみ）画像のCSSが「`background-size: cover;`」,「`background-position: bottom;`」になっているか( [テンプレート](####(※background-image使用時のみ)画像のCSSが「background-size:-cover;background-position:-bottom;」になっているか) )

</br

### Bookers1

#### 0. rspec項目[^3]
* rspecが入っているか( [テンプレート](####rspecが入っているか) )
* rspecの内容をすべてクリアしているか( [テンプレート](####rspecの内容をすべてクリアしてるか) )
* migrationファイルが条件を満たしているか ※ rspecでエラーが出た際に確認( [テンプレート](####rspecの内容をすべてクリアしてるか) )

#### 1. 必須項目[^1]
* viewでヘルパーを使えているか（`link_to`と`form_for`）( [テンプレート](####viewでヘルパーを使えているか(link_toとform_for)) )

#### 2. チャレンジ[^2]
* routes.rbの記述に`resources`を使っているか( [テンプレート](####routes.rbの記述にresourcesを使っているか) )
* 余計なrouteが設定されていないか？( [テンプレート](####余計なrouteが設定されていないか？(rails-routesを表示したときに、コントローラーが重複していない)) )
* 削除時の確認ダイアログが表示されているか( [テンプレート](####削除時の確認ダイアログが表示されているか) )
* エラーメッセージ、投稿フォーム等の見た目を整ているか（CSS）( [テンプレート](####エラーメッセージ、投稿フォーム等の見た目が整っているか(CSS)) )
* インデントが整っているか( [テンプレート](####インデントが整っているのか) )

</br

### Bookers2
#### 0. rspec項目[^3]
* rspecが入っているか( [テンプレート](####rspecが入っているのか) )
* rspecの内容をすべてクリアしてるか( [テンプレート](####rspecの内容をすべてクリアしてるのか) )
* migrationファイルが条件を満たしているか( [テンプレート](####migrationファイルが条件を満たしているのか) )[^4]

#### 1. 必須項目[^1]
* viewでヘルパーを使えているか（`link_to`と`form_for`）際に確認( [テンプレート](####viewでヘルパーを使えているのか(link_toとform_for)) )
* booksのshowページのサイドバーで新規投稿が行えるか( [テンプレート](####booksのshowページのサイドバーで新規投稿が行えるか(submitの先がupdateアクションになっている場合がある)) )
	* submitの先がupdateアクションになっている場合がある
* booksのshowページで投稿の削除ができるか( [テンプレート](####booksのshowページで投稿の削除ができるか) )
* サイドバーが常にcurrent_userになっていないか( [テンプレート](####サイドバーが常にcurrent_userになっていないか) )
* 登録した画像が表示されるか( [テンプレート](####登録した画像が表示されるか(表示されない場合、自分のpcにImage-Magick[^1]が入ってない可能性があるので注意))
	* 表示されない場合、自分のpcにImage-Magick[^5]が入ってない可能性があるので注意
* レイアウトが基準に達しているか( [テンプレート](####レイアウトが基準に達しているか) )
  * ヘッダーのリンクのアイコンをBootstrapで設定できている( [テンプレート](####レイアウトが基準に達しているか) )
  * サクセスメッセージ、エラーメッセージがはっきり見える。( [テンプレート](####レイアウトが基準に達しているか) )
* その他、大幅にレイアウトが崩れていないか( [テンプレート](####その他、大幅にレイアウトが崩れていないか)（[見本](https://bookers-level2.herokuapp.com/) )

#### 2. チャレンジ項目[^2]
* サイドバーを部分テンプレート化しているか( [テンプレート](####サイドバーを部分テンプレート化しているか) )
* 余計な記述をしていないか( [テンプレート](####余計な記述をしていないか) )
* submitボタンのレイアウトも設定しているか( [テンプレート](####submitボタンのレイアウトも設定しているか) )
* ヘッダーやページ内容の左右の余白が設定されているか、均等になっているか( [テンプレート](####ヘッダーやページ内容の左右の余白が設定されているか、均等になっているか) )
* エラーメッセージ、投稿フォーム等の見た目を整ているか（CSS）( [テンプレート](####エラーメッセージ、投稿フォーム等の見た目が整っているのか(CSS)) )
* フッターを作成しているか( [テンプレート](####フッター(CopyRight)を作成しているか) )
* 変数名は適切か( [テンプレート](####変数名は適切か) )
* インデントが整っているか( [テンプレート](####インデントが整っているかどうか) )

</br
</br

### 文頭（こちらは返却時に自動で文頭につきます）
お世話になっております。DWC運営部です。
X回目の課題提出、ありがとうございます。
提出内容を確認させていただきました結果、【(合格 or 不合格)】 となります。
引き続き、次の課題に向け学習をお願いいたします。

### 共通テンプレート : 合格だった場合
以下フィードバックになります。
〇以下の点は必須ではありませんが、スキルアップのために是非挑戦していただきたい項目です。(再提出は不要です)
[ここに出来ていなかったポイントのフィードバック]

〇以下の点は、良かったポイントでございます。
[ここに出来ていたポイントのフィードバック]

### 共通テンプレート : 不合格だった場合

以下フィードバックになります。
〇以下の点を修正して修正して再提出をお願いいたします。
[ここにフィードバック]

</br

## 各課題のレビューテンプレート

### HTML
### 1. ***必須項目（不合格時に記述）***

 ==**共通**==

#### 画像が表示されているか。
```
 ・画像が表示されていません。
 (※以下から適切な指摘を選んでください)

 ご提出していただいたリポジトリに画像ファイルの入ったフォルダがございません。適切なフォルダ、ファイルを加えてください。

 cssのbackground-imageのurl(またはimgタグ)の指定が適切ではありません。cssファイル(またはHTMLファイル)からみた適切な相対パス、または絶対パスを記述しましょう。
```
</br


==**レスポンシブ前**==

#### 横並びになっているか（HTML９章）
```
 ・非レスポンシブ時もstep-boxが縦並びになっております。
 769px以上ではstep-boxは【HTML・CSSを学ぼう】9章の演習問題の条件を満たすように、横並びになるよう修正をお願いいたします。
```
#### 見本通りの余白設定になっているか（HTML９章）
```
 ・step-box間の余白がございません。
 見本画像を確認していただき、適切な幅の余白を作成しましょう。
```

</br

==**レスポンシブ後**==
#### viewportの設定をしているか
```
・htmlファイルにviewportの設定がないため、google chromeのデベロッパーツール(検証)によるレスポンシブ対応の確認ができません。
HTML 10章を見ながら、適切なコードを加えましょう。
また、レスポンシブ対応の確認はブラウザの幅を縮めるのではなく、デベロッパーツールを用いて下さい。
```
#### メディアクエリの設定が「max-width: 768px」になっているか
```
・レスポンシブが切り替わる画面幅が、課題で指定されている幅と異なっております。
画面幅が768px以下でレスポンシブ対応するよう、修正をお願いいたします。
```
#### step-boxの横幅が、常に画面幅の90%になっているか
```
・step-boxの幅が画面幅90%になっておりません。原因は以下です。
(※以下から適切な指摘を選んでください)
mainやstep-box等の幅がpxで指定されているため。

main, step-box両方にwidth:90%がかかっているため。この場合、step-boxのwidthは81%になってしまいます。

レスポンシブ前の横幅のmarginが残ってしまっているため。

-その他原因があれば書く-

要件を満たすように修正をお願いいたします。
```
#### 見本通りの余白設定になっているか（HTML１０章）
```
・step-box間の余白がございません。
見本画像を確認していただき、適切な幅の余白を作成しましょう。

・main上下の余白が50pxずつ設定されておりません。
cssの記述を確認してみましょう。
```

==**オフライン講座限定**==
#### ヘッダー、フッターが作成されているか
```
・ヘッダーとフッターがございません。
お手本では、mainの上部にヘッダー、下部にフッターを作成するように指示がされています。
```

</br

### 2. ***チャレンジ（合格時に記述する)***
#### (※background-image使用時のみ)画像のCSSが「background-size: cover;background-position: bottom;」になっているか
```
→できていた場合
・画像のpositionもお手本同様整っており素晴らしいです。

→できていなかった場合
・画像の表示がお手本と異なっております。
divタグ内での画像の位置をcss調整することができます。取り組む際は、background-sizeとbackground-positionについて調べてみて下さい。
```
#### 要素が中央寄せされているか
```
→できていた場合
・mainがお手本通り綺麗に中央寄せになっており、見やすいviewでした。

→できていなかった場合
・step-box、またはmainの左右の余白を均等にしてみましょう。
お手本同様に中央寄せも可能です。cssのmarginについて調べ、左右の余白を均等にできるようにしておくと尚、良いかと思われます。
```
#### インデントが整っているか
```
→できていた場合
・インデントが整っていて素晴らしいです、とても見やすいコードでした！
→できていなかった場合
・インデントをより意識するようにしましょう。
自分には勿論、他者から見ても解りやすいコードにすることは非常に大切です。
例えば、買った本が一切改行されてなかったり、改行時の空白の大きさがそろっていないようなものです。
転職する際には自分のコードが見られます。
意識しないと改善しないので、今のうちからしっかりインデントを整えてみましょう！
```

</br

### Bookers
### 0. ***Rspec(通らない場合、必須項目の採点は不要)***
#### rspecが入っているか
```
・提出していただいた課題にRspecに必要なファイルがございません。
要件として、Rspecテストをご自身で通していただくことをお願いしております。
【アプリケーションを完成させよう】8章の"Rspecによるテスト"以下に手順が示されておりますので、ご確認お願いいたします。
ご不明点等ございましたら、お気軽にご質問ください。
```
#### rspecの内容をすべてクリアしてるか
```
・Rspecテストでエラーが出ております。
カリキュラム内、Rspecによるテスト以下最後に「赤い文字全てが緑になれば、要件を全て満たせているということなので、課題を提出しましょう。」とございます。
こちらのテストでエラーがなくなってから、もう一度ご提出をお願いいたします。
```
#### migrationファイルが条件を満たしているか
```
(※以下から適切な指摘を選んでください)
・migrationファイルに必要なカラムが記述されていません。
migrateをした後にカラムを変更した場合、データベースには前回のカラムが残っていて、migrationファイルには存在しない、といった事態が起こります。
migrationファイルを見返し、必要なカラムが全て揃うように編集、追加をお願いいたします。

・rails s、db:migrateが行えません。
-採点者は原因を調べ、明確に記述してください。(同じカラムを追加するファイルが２つある、deviseでbooksテーブルを作成している等)原因が分からなければ待機室の先輩メンターに相談しましょう-
```
### 1. ***必須項目（不合格時に記述）***
#### viewでヘルパーを使えているか(link_toとform_for)
```
・viewを記述するときは、ヘルパーを使用してください。
railsの利点を生かし可読性も上げるために、viewではヘルパーを使用しましょう。
リンクの作成は<aタグではなく、link_toを使用してください。

-もしフォームもformタグで作成されていた場合-
また、formを作成するときは<formタグではなく、form_forを使用してください。
```
### 2. ***チャレンジ***（合格時に記述)
#### routes.rbの記述にresourcesを使っているか
```
→できていた場合
 ・resourcesを使ってroutes.rbを記述していたので、コードがまとめられており、見やすかったです。
→できていなかった場合
 ・routes.rbを記述する際、resourcesを使うことにより、少ないコードでまとまりのあるルーティングの記述が可能なので、試してみましょう。
```
#### 余計なrouteが設定されていないか？(rails routesを表示したときに、コントローラーが重複していない)
```
→できていた場合
-追記不要-
→できていなかった場合
・不要なrouteが記述されております。
使われていないrouteを記述するのはトラブルの元となります。また、DRY原則にも反する為、使われていないrouteは記述しないよう修正をお願いいたします。
```
#### 削除時の確認ダイアログが表示されているか
```
→できていた場合
 ・削除時に確認のダイアログが出ることで、誤った削除を防止できております。お手本に合わせられていて大変良いと感じました。
→できていなかった場合
 ・削除時に、確認のダイアログを出してみましょう。
 誤ったデータの削除を防ぐため、ダイアログを表示させる記述を書いてみましょう。
```
#### エラーメッセージ、投稿フォーム等の見た目が整っているか(CSS)
```
→できていた場合
・エラーメッセージ(フォーム)のレイアウトが整っております。
隅々のレイアウトまで気を配られていて素晴らしいです！
→できていなかった場合
-追記不要-
```
#### インデントが整っているのか
```
→できていた場合
・インデントが整っており、綺麗なコードでした！
→できていなかった場合
(インデントが整っていない場合)
・インデントをより意識するようにしましょう。
 endや終了タグが抜けている時、インデントが整っていればどこが抜けているか一目瞭然になる等、整える事による利点は多いので、ぜひ整えてみてください。
(インデントの幅が統一されていない場合)
・インデントの幅を統一しましょう。
統一が行われていないと、タグの最初と最後にズレが生じ、見にくいコードになってしまいます。
```

</br

### Bookers2
### 0. ***Rspec(通らない場合、必須項目の採点は不要)***
#### rspecが入っているのか
```
・提出していただいた課題にRspecに必要なファイルがございません。
要件として、Rspecテストをご自身で通していただくことをお願いしております。
【アプリケーションを完成させよう】8章の"Rspecによるテスト"以下に手順が示されておりますので、ご確認お願いいたします。
ご不明点等ございましたら、お気軽にご質問ください。
```
#### rspecの内容をすべてクリアしてるのか
```
・Rspecテストでエラーが出ております。
カリキュラム内、Rspecによるテスト以下最後に「赤い文字全てが緑になれば、要件を全て満たせているということなので、課題を提出しましょう。」とございます。
こちらのテストでエラーがなくなってから、もう一度ご提出をお願いいたします。
```
#### migrationファイルが条件を満たしているのか
```
(※以下から適切な指摘を選んでください)
・migrationファイルに必要なカラムが記述されていません。
migrateをした後にカラムを変更した場合、データベースには前回のカラムが残っていて、migrationファイルには存在しない、といった事態が起こります。
migrationファイルを見返し、必要なカラムが全て揃うように編集、追加をお願いいたします。

・rails s、db:migrateが行えません。
-採点者側が原因を調べ、明確に記述してください。(同じカラムを追加するファイルが２つある、deviseでbooksテーブルを作成している等)原因が分からなければ待機室の先輩メンターに相談しましょう-
```
### 1. ***必須項目（不合格時に記述）***
#### viewでヘルパーを使えているのか(link_toとform_for)
```
・viewを記述するときは、ヘルパーを使用してください。
railsの利点を生かし可読性も上げるために、viewではヘルパーを使用しましょう。
リンクの作成は<aタグではなく、link_toを使用してください。

-もしフォームもformタグで作成されていた場合-
また、formを作成するときは<formタグではなく、form_forを使用してください。
```
#### booksのshowページのサイドバーで新規投稿が行えるか(submitの先がupdateアクションになっている場合がある)
```
・books#showにおいて、サイドバーのフォームが新規投稿フォームになっておりません。
渡す引数に注意しましょう。
```
#### booksのshowページで投稿の削除ができるか
```
・本が削除できません。正しく削除できるようにしましょう。
```
#### サイドバーが常にcurrent_userになっていないか
```
・サイドバーの名前等の情報は、常に自分についての情報ではございません。
お手本を確認してみて下さい。
```
#### 登録した画像が表示されるか(表示されない場合、自分のpcにImage-Magick[^1]が入ってない可能性があるので注意)
```
・部分テンプレートや変数の使い方に誤りがあるため、
(問題のページのコントローラー名/アクション名)ページにて、登録した画像が表示されず、
fallbackのno-image.jpgが表示されております。
適切に修正お願いいたします。
```
#### レイアウトが基準に達しているか
 - ヘッダーのリンクのアイコンをBootstrapで設定できているか(FontAwesomeでのアイコン設定はng)
```
・要件に、bootstrapでアイコンを付けるよう指示がございます。
(※以下から適切なものを選んでください)
お手数ですが、FontAwesomeではなく、bootstrapを用いてアイコンの実装をお願いいたします。

見本通り、ヘッダーのリンクの横にアイコンが表示されるよう、修正お願いいたします。
```
- サクセスメッセージ、エラーメッセージがはっきり見える。（他のレイアウトに被ってない）
```
・サクセスメッセージがヘッダーに隠れて見えなくなっております。
見本ではmarginをかけて対処をしております。
見本をデベロッパーツールで確認し、サクセスメッセージが見えるようにレイアウトの調整をお願いいたします。
```
#### その他、大幅にレイアウトが崩れていないか
```
・(ずれている要素)の表示が見本と異なっております。
見本を参考にしながら、erbの記述を見返して、レイアウトを整えましょう。

・画像の表示サイズを設定してください。
fill、またはcssで大きさを設定して、レイアウトを整えましょう。

(※ その他、レイアウトが大幅に見づらい箇所があったら、採点者の判断で指摘お願いします)
```

### 2. ***チャレンジ***（合格時に記述)
#### サイドバーを部分テンプレート化しているか
```
→できていた場合
 ・共通部分をテンプレート化出来ております。無駄がなくまとまったコードになっており素晴らしいです!
→できていなかった場合
 ・共通部分を、部分テンプレート化してみましょう。
```
#### 余計な記述をしていないか
```
→できていた場合
-追記不要-
→できていなかった場合
(※以下から適切な指摘を選んでください)
・不要なアクションが(対象のコントローラー名)コントローラーに記述されております。
(対象のコントローラー名)コントローラーの(対象のアクション)アクションは使用されておりません。トラブルを減らすため、見やすいコードにするため、不要なコードの記述は避けるようにしましょう。

・application_controllerのconfigure_permitted_parametersについてです。
deviseは元々emailとpasswordしか保存できず、カリキュラム(meshiterro)では新規登録時にnameも保存したかったため、こちらにnameを書き、「新規登録時にnameの保存を許可します」という記述をしました。
今回の課題では、deviseの設定を変更し、nameとpasswordでログインできるようにしたため、今度はemailを許可しないと保存ができませんが、nameは記述をしなくとも保存ができます。
ですので、今回こちらに記載するのはemailだけで十分になります。
```
#### submitボタンのレイアウトも設定しているか
```
→できていた場合
・Create Book等のsubmitボタンにもレイアウトが設定されており、整ったデザインになっていますね！
→できていなかった場合
・投稿の送信ボタンもbootstrap等でレイアウトを整える事が可能です。
送信ボタンのレイアウトの整え方も、この機会に覚えてみましょう。
```
#### ヘッダーやページ内容の左右の余白が設定されているか、均等になっているか
```
→できていた場合
・左右均等に余白が設定されている為、とても見やすいレイアウトです!
→できていなかった場合
 (※以下から適切な指摘を選んでください)
・余白が左右均等でない箇所がございます。
余白の幅が左右で統一されていると、より一層見やすいレイアウトに仕上がります。余白の幅を揃えてみましょう。

・(余白がないページのコントローラー/アクション)ページの左右の余白がございません。
左右の余白がなく、ページの端から表示されている要素がございます。余白が存在しないと窮屈な印象を与えるレイアウトになってしまいますので、適切な余白を追加してみましょう。
```
#### エラーメッセージ、投稿フォーム等の見た目が整っているのか(CSS)
```
→できていた場合
・エラーメッセージ(フォーム)のレイアウトが整っており、エラーが見やすいです！
隅々のレイアウトまで気を配られていて素晴らしいです！
→できていなかった場合
-追記不要-
```
#### フッター(CopyRight)を作成しているか
```
→できている場合
・お手本同様にフッター(CopyRight)が作成されております。忘れやすい箇所ですがしっかりと抑えられていますね!
→できていなかった場合
・フッター(CopyRight)が作成されておりません。
お手本サイトにはフッターも表示されていますので、application.html.erbに記述してみましょう。
```
#### 変数名は適切か
```
→できている場合
-追記不要-
→できていなかった場合
・変数名が適切ではありません。
(※以下から適切な指摘を選んでください)
複数レコードが入る変数は複数系の変数名に、レコードが単数で入る変数は単数系の変数名にしましょう。

(対象の変数名)という名前の変数がございますが、こちらの変数名では他人が見たときに、変数の用途を捉えづらいです。
他人が見た時に用途が分かりやすい変数名を設定しましょう。
```
#### インデントが整っているかどうか
```
→できていた場合
 ・インデントが整っており、大変見やすいコードでした！
→できていなかった場合
 ・インデントをより意識するようにしましょう。

 (一部整っていなかった場合)
 一部、インデントが整っていない箇所がございました。コードは他人からも見られるものなので、常にずれがないよう意識してみましょう。

 (ガタガタだった場合)
 これから他人にコードを見られる機会が増え、インデントを整える事は必須になります。整っていないと、今後のチーム開発や転職活動に支障をきたすので、必ず応用課題等で練習しておきましょう。
```


</br

## 課題のレビューサンプル
### HTML 不合格
> 以下フィードバックになります。
> 〇以下の点を修正して修正して再提出をお願いいたします。
> ーレスポンシブ前
> ・非レスポンシブ時もstep-boxが縦並びになっております。
> 769px以上ではstep-boxは【HTML・CSSを学ぼう】9章の演習問題の条件を満たすように、横並びになるよう修正をお願いいたします。
>
> ーレスポンシブ後
> ・step-boxの幅が画面幅90%になっておりません。原因は以下です。
> mainやstep-box等の幅がpxで指定されているため。
> レスポンシブ前の横幅のmarginが残ってしまっているため。
> ・main上下の余白が50pxずつ設定されておりません。
> cssの記述を確認してみましょう。

### HTML 合格
> 以下フィードバックになります。
> 〇以下の点は必須ではありませんが、スキルアップのために是非挑戦していただきたい項目です。
> ・画像の表示がお手本と異なっております。
> divタグ内での画像の位置をcss調整できます。取り組む際は、background-sizeとbackground-positionについて調べてみて下さい。
> 〇以下の点は、良かったポイントでございます。
> ・画像の表示がお手本と異なっております。
> divタグ内での画像の位置をcss調整できます。取り組む際は、background-sizeとbackground-positionについて調べてみて下さい。
> ・インデントが整っていて素晴らしいです、とても見やすいコードでした。

### Bookers 不合格(Rspecが行えない)
> 以下フィードバックになります。
> 〇以下の点を修正して修正して再提出をお願いいたします。
> ・Rspecテストでエラーが出ております。
> カリキュラム内、Rspecによるテスト以下最後に「赤い文字全てが緑になれば、要件を全て満たせているということなので、課題を提出しましょう。」とございます。
> こちらのテストでエラーがなくなってから、もう一度ご提出をお願いいたします

### Bookers2 合格
> 以下フィードバックになります。
> 〇以下の点は必須ではありませんが、スキルアップのために是非挑戦していただきたい項目です。
> ・不要なアクションがbooksコントローラーに記述されております。
> booksコントローラーのtopアクションは使用されておりません(top画面はhomeコントローラーで作成されています)。トラブルを減らすため、見やすいコードにするため、不要なコードの記述は避けるようにしましょう。
> ・変数名が適切ではありません。
> @hensuという名前の変数がございますが、こちらの変数名では他人が見たときに、変数の用途を捉えづらいです。
> 他人が見た時に用途が分かりやすい変数名を設定しましょう。
> ・インデントをより意識するようにしましょう。
> これから他人にコードを見られる機会が増え、インデントを整える事は必須になります。整っていないと、今後のチーム開発や転職活動に支障をきたすので、必ず応用課題等で練習しておきましょう。
>
> 〇以下の点は、良かったポイントでございます。
> ・共通部分をテンプレート化出来ています。無駄がなくまとまったコードで可読性が高いです。
> ・Create Book等のsubmitボタンにもbootstrapを適応し、レイアウトが整っております。
> ・左右均等に余白が設定されている為、見やすいレイアウトになっております。
> ・お手本同様にフッターが作成されております。忘れやすい箇所ですがしっかりと抑えられています。
